---

- name: Check consul service data
  when:
    - traefik_consul == None
    - traefik_config_consul | lower == 'true'
  fail: msg="traefik_consul should be given"

- name: Check running services
  service_facts:

- name: Set default facts
  set_fact:
    use_firewalld: false
    configure_consul: false

- name: Get Consul details
  when:
    - traefik_config_consul | lower == 'true'
    - ansible_facts.services.consul is defined
  block:
    - name: Get Consul service details
      systemd: name=consul
      register: consul_systemd

    - name: Set Consul facts
      set_fact:
        consul_bin: "{{ systemd_result.status.ExecStart | regex_replace('^.+path=(.+?)\\s+.+?$','\\1') }}"
        configure_consul: true

- name: Check traefik binary
  register: traefik_bin_stats
  stat: path={{ traefik_install_prefix }}/traefik get_checksum=no

- name: Check traefik version
  when:
    - traefik_bin_stats.stat.exists
  register: traefik_bin_version
  shell: >
    "{{ traefik_install_prefix }}"/traefik version \
    | awk -Fv '/^Version/ {print $2}'

- name: Set the version to use
  when: traefik_package_state == 'latest'
  block:
    - name: Get last version online
      register: last_version
      run_once: true
      shell: >
        curl \
            {% if traefik_http_proxy is defined and traefik_http_proxy != '' %}-x {{ traefik_http_proxy }}{% endif %} \
            -s {{ traefik_versions_url }} \
        | fgrep /containous/traefik/tree/ \
        | awk '{print $2}' \
        | awk -F/ '{gsub("\"","");print $NF}'

    - set_fact: traefik_version="{{ last_version.stdout }}"

- name: Manage non-root traefik user
  when:
    - traefik_user != 'root'
  block:
    - name: Add the user {{ traefik_user }}
      user:
        name: "{{ traefik_user }}"
        comment: "Traefik daemon user"

